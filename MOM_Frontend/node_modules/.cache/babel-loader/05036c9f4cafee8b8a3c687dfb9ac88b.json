{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inspiron\\\\Desktop\\\\New folder (2)\\\\MOM_Frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\";\nimport React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMeet = () => {\n      let token = localStorage.getItem('token');\n      console.log(\"token\", token);\n\n      if (token) {\n        fetch('http://localhost:8000/api/current_user/', {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        }).then(res => res.json()).then(json => {\n          if (json === undefined || json.email === '' || json.email === undefined) {\n            // If the token is invalid or expired\n            //console.log('navbar componentDidMount TOken Expired', json)\n            return;\n          } else {\n            // If token is correct\n            fetch('http://localhost:8000/api/getMeet', {\n              method: 'POST',\n              headers: {\n                'Content-Type': \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n              },\n              body: JSON.stringify({\n                email: json.email\n              })\n            }).then(res => res.json()).then(req2 => {\n              console.log(\"getMeet\", req2);\n              let dashboardContent = \"\";\n              req2.forEach(element => {\n                dashboardContent += JSON.stringify(element);\n              });\n              console.log(\"dashboardContent\", dashboardContent);\n              this.setState({\n                meetList: 'hello'\n              });\n              return dashboardContent;\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      meetList: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getMeet();\n  }\n\n  render() {\n    const logged_in_dashboard = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Welcome \", this.props.userState.email, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 53\n      }\n    }), this.state.meetList);\n    const logged_out_dashboard = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Login To View Dashboard\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 35\n      }\n    }), this.props.userState.logged_in ? logged_in_dashboard : logged_out_dashboard);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/Inspiron/Desktop/New folder (2)/MOM_Frontend/src/components/Dashboard/Dashboard.js"],"names":["React","Component","Dashboard","constructor","props","getMeet","token","localStorage","getItem","console","log","fetch","headers","Authorization","then","res","json","undefined","email","method","body","JSON","stringify","req2","dashboardContent","forEach","element","setState","meetList","state","componentDidMount","render","logged_in_dashboard","userState","logged_out_dashboard","logged_in"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            meetList: ''\r\n        }\r\n    }\r\n\r\n    getMeet = () => {\r\n        let token = localStorage.getItem('token');\r\n        console.log(\"token\", token);\r\n        if (token) {\r\n            fetch('http://localhost:8000/api/current_user/', {\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    if (json === undefined || json.email === '' || json.email === undefined) {\r\n                        // If the token is invalid or expired\r\n                        //console.log('navbar componentDidMount TOken Expired', json)\r\n                        return;\r\n                    }\r\n                    else {\r\n                        // If token is correct\r\n                        fetch('http://localhost:8000/api/getMeet', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': \"application/json\",\r\n                                Authorization: `JWT ${localStorage.getItem('token')}`\r\n                            },\r\n                            body: JSON.stringify({ email: json.email })\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(req2 => {\r\n                                console.log(\"getMeet\", req2);\r\n                                let dashboardContent = \"\";\r\n                                req2.forEach(element => {\r\n                                    dashboardContent += JSON.stringify(element);\r\n                                });\r\n                                console.log(\"dashboardContent\", dashboardContent);\r\n                                this.setState({ meetList: 'hello' });\r\n                                return (dashboardContent);\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMeet();\r\n    }\r\n\r\n    render() {\r\n        const logged_in_dashboard = (\r\n            <div>\r\n                Welcome {this.props.userState.email}<br />\r\n                {this.state.meetList}\r\n            </div>)\r\n\r\n        const logged_out_dashboard = (\r\n            <div>\r\n                Login To View Dashboard\r\n            </div>)\r\n\r\n        return (\r\n\r\n            <div>\r\n                <br /><br /><br /><br />\r\n                {\r\n                    this.props.userState.logged_in ? logged_in_dashboard : logged_out_dashboard\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}